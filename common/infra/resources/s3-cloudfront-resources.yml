Resources:

    PhotosBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Sub '${self:custom.photosBucketName}'
            AccessControl: Public
            CorsConfiguration:
                CorsRules:
                -   AllowedHeaders: ['*']
                    AllowedMethods: ['PUT']
                    AllowedOrigins: ['*']

    PhotosBucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            Bucket:
                Ref: PhotosBucket
            PolicyDocument:
                Statement:
                # Read permission for CloudFront
                -   Action: s3:GetObject
                    Effect: "Allow"
                    Resource: !Sub "arn:aws:s3:::#{PhotosBucket}/*"
                    Principal:
                        CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId
    CloudFrontOriginAccessIdentity:
        Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
        Properties:
            CloudFrontOriginAccessIdentityConfig:
                Comment: !Sub 'Identity for accessing CloudFront from S3 within stack #{AWS::StackName}'

Outputs:
    PhotosBucket:
        Value: !Ref PhotosBucket
    #PhotosCdnDistributionId:
       # Value: !Ref PhotosCdnDistribution
    PhotosCdnDistributionDomainName:
        Value: !GetAtt PhotosCdnDistribution.DomainName
